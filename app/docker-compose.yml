version: '3'
services:
  frontend:
    image: nginx:1.22
    container_name: frontend
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend:/var/www/static
    networks:
      - traefik
    ports:
    - 8080:8080
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.frontend.entrypoints=http"
        - "traefik.http.routers.frontend.rule=Host(`todo.mlcrosoft-online.site`)"
        - "traefik.http.middlewares.frontend-https-redirect.redirectscheme.scheme=https"
        - "traefik.http.routers.frontend.middlewares=frontend-https-redirect"
        - "traefik.http.routers.frontend-secure.entrypoints=https"
        - "traefik.http.routers.frontend-secure.rule=Host(`todo.mlcrosoft-online.site`)"
        - "traefik.http.routers.frontend-secure.tls=true"
        - "traefik.http.routers.frontend-secure.service=frontend"
        - "traefik.http.services.frontend.loadbalancer.server.port=8080"
        - "traefik.docker.network=traefik"
  todo-service-api:
    image: backend:latest
    container_name: todo-service-api
    networks:
      - traefik
      - internal
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.todo-service-api.entrypoints=http"
        - "traefik.http.routers.todo-service-api.rule=Host(`todo.mlcrosoft-online.site`) && PathPrefix(`/api`)"
        # - "traefik.http.middlewares.todo-service-api-https-redirect.redirectscheme.scheme=https"
        # - "traefik.http.routers.todo-service-api.middlewares=todo-service-api-https-redirect"
        # - "traefik.http.routers.todo-service-api-secure.entrypoints=https"
        # - "traefik.http.routers.todo-service-api-secure.rule=Host(`todo.mlcrosoft-online.site`) && PathPrefix(`/api`)"
        # - "traefik.http.routers.todo-service-api-secure.tls=true"
        # - "traefik.http.routers.todo-service-api-secure.service=todo-service-api"
        - "traefik.http.services.todo-service-api.loadbalancer.server.port=3000"
    environment:
      - STORAGE=mysql
  db:
    image: mysql:8.0.29
    container_name: db
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - dbdata:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQL_ROOT_PASSWORD
      - MYSQL_USER=$MYSQL_USER
      - MYSQL_PASSWORD=$MYSQL_PASSWORD
      

    networks:
      - internal
volumes:
  dbdata: {}
  
networks:
  traefik:
    external: true
  internal:
    external: false



